version: '3.8'

services:
  django:
    # Берем Dockerfile из ./docker/django/
    build:
      context: .
      dockerfile: ./docker/django/Dockerfile
    image: thermopol_django
    container_name: thermopol_django
    # Определяем внешние тома (volume) и места, где они будут подключены внутри контейнера
    volumes:
      - thermopol_static:/thermopol/static
      - thermopol_media:/thermopol/media
      - thermopol_fixtures:/thermopol/fixtures_temp
    # Открываем порт 8000 внутри
    expose:
      - "8000"
    environment:
      # - DEBUG=${DEBUG}
      # - SECRET_KEY=${SECRET_KEY}
      # - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      # - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
      # - CSRF_TRUSTED_ORIGINS=${CSRF_TRUSTED_ORIGINS}
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    depends_on:
      - postgres
    # Собираем статику, делаем миграции и запускаем WSGI
    command: sh -c "python ./docker/django/manage.py collectstatic --no-input &&
      python ./docker/django/manage.py makemigrations &&
      python ./docker/django/manage.py migrate &&
      gunicorn thermopol.wsgi -b 0.0.0.0:8000 --chdir /thermopol/docker/django"

  postgres:
    restart: always
    build:
      context: ./docker/postgres/
      dockerfile: ./Dockerfile
    image: thermopol_postgres
    container_name: thermopol_postgres
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - thermopol_postgres:/var/lib/postgresql/data/

  nginx:
    restart: always
    build:
      context: ./docker/nginx/
      dockerfile: ./Dockerfile
    image: thermopol_nginx
    container_name: thermopol_nginx
    ports:
      - "3003:3003"
    volumes:
      - thermopol_static:/thermopol/static
      - thermopol_media:/thermopol/media
      - thermopol_fixtures:/thermopol/fixtures
    depends_on:
      - django

volumes:
  thermopol_postgres:
  thermopol_static:
  thermopol_media:
  thermopol_fixtures:
